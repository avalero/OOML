{"tagline":"C++ Object Oriented Mechanis Language","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# What is the C++ Object Oriented Mechanics Library\r\n\r\nHave you ever used OpenSCAD, great, isn't it? Now, imagine that you are not anymore limited by the OpenSCAD syntax and libraries. Imagine using recursion to create objects, inheriting some parts from others, having at your disposal hundreds of geometry libraries, and much moreâ€¦ that's the OOML. The OOML is simply a C++ empowered OpenSCAD.\r\n\r\n* OOML stands for Object Oriented Mechanics Library. The OOML is a set of tools written in C++ that allow designers to create mechanical parts using the C++ language.\r\n* OOML applies the model of Object Oriented Programming to Mechanical Designs. Parts can be inherited from others. A part can join together other existing parts, and so forth.\r\n* OOML has up to now no external dependency and can be used in any computer having a standard C++ compiler.\r\n* OOML is Open Source, you can use it, modify it, share it.\r\n\r\n# What's the intention of the OOML\r\n\r\n* OOML brings together both the design of pieces through code (as it's done with OpenSCAD) with the programming power of an Object Oriented Language as C++.\r\n* OOML provides a powerful tool for designers to boost their creativity building mechanical parts. As it uses C++, designers may use any other existing C++ library to calculate, manipulate, create their parts.\r\n* OOML allow designers to create and share their own Parts Libraries, which will certainly enrich the community.\r\n\r\nUp to current version OOML generates only OpenSCAD code. We are working to generate also code for other cad programs such as FreeCad, OpenRave, and so forth.\r\n","name":"OOML"}